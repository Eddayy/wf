{"version":3,"sources":["webpack:///./src/components/landing.js","webpack:///./src/containers/worldstate.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Landing","observer","props","_this","_React$Component","call","this","state","seconds","componentDidMount","_this2","interval","setInterval","store","setpcstate","setState","componentWillUnmount","clearInterval","render","persistentEnemies","get_pc_persistentEnemies","react","map","acolyte","key","id","agentType","isDiscovered","lastDiscoveredAt","index_es","Date","now","date","renderer","_ref","React","Worldstate","initializerDefineProperty_default","_descriptor","_descriptor2","setclient","asyncToGenerator_default","regenerator_default","a","mark","_callee","client","_ref2","body","wrap","_context","prev","next","Swagger","sent","setSchemes","runInAction","apis","worldstate","get_pc","pc_worldstate","stop","_descriptor3","checkpersistent","_callee2","_ref3","_context2","obj","forEach","enemy","observable","computed","action","_callee3","_ref5","_context3","IndexPage","react_default","createElement","layout","seo","title","keywords","landing","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","Fragment","header","paddingTop","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-a9f186c05ec4615a614d.js","sourcesContent":["import * as React from 'react';\nimport { observer } from 'mobx-react'\nimport Countdown from 'react-countdown-now';\n\n@observer\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 20 };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() =>  this.props.store.setpcstate(), 22000);\n    this.setState({ seconds: 20 })\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const persistentEnemies = this.props.store.get_pc_persistentEnemies\n    return (\n      <div>\n        Worldstate:\n        {persistentEnemies && \n            <div>\n            {persistentEnemies.map(acolyte => {\n              return(\n                <div key={acolyte.id}>\n                {acolyte.agentType}\n                  <div>\n                    Status: {acolyte.isDiscovered ? `Found at ${acolyte.lastDiscoveredAt}`: `Missing`}\n                  </div>\n                </div>\n              )\n            })}\n            <Countdown\n              key={Date.now()}\n              date={Date.now() + 20 * 1000}\n              renderer={({ seconds }) => {\n                return <span>{seconds} seconds</span>;\n              }}\n            />\n          </div>\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default Landing;","import Swagger from 'swagger-client'\n\nimport { observable, computed , action , configure , runInAction} from 'mobx';\n\n\n\nexport default class Worldstate {  \n    @observable pc_worldstate = {};\n    @observable client ={} ;\n\n    constructor() {\n      this.setclient()\n    }\n\n    @computed get get_pc_persistentEnemies(){\n      return this.pc_worldstate.persistentEnemies\n    }\n\n    @computed get check(){\n      return this.pc_worldstate.persistentEnemies\n    }\n\n    setclient = async () =>{\n      let client = await Swagger('https://docs.warframestat.us/swagger.json')\n      client.setSchemes(['https']);\n      runInAction(()=>{\n        this.client = client\n      })\n      const {body} = await this.client.apis.worldstate.get_pc()\n      runInAction(()=>{\n        this.pc_worldstate = body\n      })\n    }\n\n    // setclient(){\n    //   Swagger('https://docs.warframestat.us/swagger.json')\n    //     .then((client)=>{\n    //       runInAction(()=>{\n    //         this.client = client\n    //         return client.apis.worldstate.get_pc()\n    //       })\n    //     })\n    //     .then(({body})=> {\n    //       runInAction(()=>{\n    //         this.pc_worldstate = body\n    //       })\n    //     })\n    // }\n\n    @action\n    setpcstate = async () => {\n      const {body} = await this.client.apis.worldstate.get_pc()\n      runInAction(()=>{\n        this.pc_worldstate = body\n      })\n    }   \n    @action\n    async checkpersistent(){\n      const {obj} = await this.client.apis.worldstate.get_pc_persistentEnemies()\n      obj.forEach(enemy=>{\n\n      })\n    }\n}","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Landing from '../components/landing'\n\nimport worldstate from '../containers/worldstate';\n\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Landing store={new worldstate()}/>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © {new Date().getFullYear()}, Built by\n            {` `}\n            <a href=\"https://eddayy.github.io\">Edmund</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}