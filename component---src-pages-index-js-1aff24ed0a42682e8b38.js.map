{"version":3,"sources":["webpack:///./src/components/landing.js","webpack:///./src/containers/worldstate.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Landing","inject","observer","render","react","console","log","this","props","store","pc_worldstate","React","Worldstate","initializerDefineProperty_default","_descriptor","_descriptor2","setclient","_this","Swagger","then","client","apis","worldstate","get_pc","_ref","body","runInAction","setpcstate","_callee","_ref2","regenerator_default","a","wrap","_context","prev","next","sent","stop","checkpersistent","_callee2","_ref3","_context2","get_pc_persistentEnemies","obj","forEach","enemy","persistentEnemies","observable","text","computed","action","IndexPage","react_default","createElement","layout","seo","title","keywords","landing","gatsby_browser_entry","to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-1aff24ed0a42682e8b38.js","sourcesContent":["import * as React from 'react';\nimport { inject, observer } from 'mobx-react'\nimport { action } from 'mobx'\n\n@inject('Worldstate')\n@observer\nclass Landing extends React.Component {\n  render() {\n    return (\n      <div>\n        Worldstate:\n        {console.log(this.props.store.pc_worldstate)}\n      </div>\n    );\n  }\n\n}\n\nexport default Landing;","import Swagger from 'swagger-client'\n\nimport { observable, computed , action , configure , runInAction} from 'mobx';\n\n\n\nexport default class Worldstate {  \n    @observable pc_worldstate = {text:\"hello\"};\n    @observable client ={} ;\n\n    constructor() {\n      this.setclient()\n    }\n\n    @computed get get_pc_persistentEnemies(){\n      return this.pc_worldstate.persistentEnemies\n    }\n\n    @computed get check(){\n      return this.pc_worldstate.persistentEnemies\n    }\n\n    // setclient = async () =>{\n    //   const client = await Swagger('https://docs.warframestat.us/swagger.json')\n    //   runInAction(()=>{\n    //     this.client = client\n    //   })\n    // }\n\n    @action\n    setclient(){\n      Swagger('https://docs.warframestat.us/swagger.json')\n        .then((client)=>{\n          this.client = client\n          return client.apis.worldstate.get_pc()\n        })\n        .then(({body})=> {\n          runInAction(()=>{\n            this.pc_worldstate = body\n          })\n        })\n    }\n\n    @action\n    async setpcstate(){\n      console.log(this.client)\n      const {body} = await this.client.apis.worldstate.get_pc()\n      this.pc_worldstate = body\n      console.log(body)\n    }   \n    @action\n    async checkpersistent(){\n      const {obj} = await this.client.apis.worldstate.get_pc_persistentEnemies()\n      obj.forEach(enemy=>{\n\n      })\n    }\n}","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Landing from '../components/landing'\n\nimport worldstate from '../containers/worldstate';\n\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Landing store={new worldstate()}/>\n    <Link to=\"/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}